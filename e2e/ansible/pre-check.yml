- hosts: localhost

  vars:
    list: ["default", "kube-public", "kube-system", "openebs"]

  tasks:

    - name: Cleanup /var/openebs
      file:
        path: "/var/openebs"
        state: absent
      become: true
      delegate_to: "{{ item }}"
      with_items: "{{groups['kubernetes-kubeminions']}}"

    - name: List available namespaces
      shell: source ~/.profile; kubectl get ns --no-headers | awk {'print $1'}
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: result

    - name: Get list of pv's for all namespaces
      shell: source ~/.profile; kubectl get pv --no-headers | awk {'print $1'}
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: list_pv

    - name: Delete pv's 
      shell: source ~/.profile; kubectl delete pv {{ item }} 
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      with_items: "{{ list_pv.stdout_lines }}"

    - name: Get the list of available spc
      shell: source ~/.profile; kubectl get spc --no-headers -o custom-columns=:metadata.name
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: list_spc

    - name: Delete the spc's
      shell: source ~/.profile; kubectl delete spc {{ item }}
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      with_items: "{{ list_spc.stdout_lines }}"

    - name: Get the available disk list
      shell: source ~/.profile; kubectl get disks  --no-headers -o custom-columns=:metadata.name
      args:
        executable: /bin/bash
      delegate_to: "{{ groups['kubernetes-kubemasters'].0}}"
      register: list_disk

    - name: Delete the available disks
      shell: source ~/.profile; kubectl delete disks {{ item }}
      args:
        executable: /bin/bash
      delegate_to: "{{ groups['kubernetes-kubemasters'].0}}"
      with_items: "{{ list_disk.stdout_lines }}"
    
    - name: Delete namespaces which are not required
      shell: source ~/.profile; kubectl delete ns {{ item }} --grace-period=0 --force
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      with_items: "{{ result.stdout_lines }}"
      when: item != 'kube-system' and item != 'openebs' and item != 'kube-public' and item != 'default'
      ignore_errors: true

    - name: List namespaces after deletion
      shell: source ~/.profile; kubectl get ns --no-headers | awk {'print $1'}
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      register: result
      until: result.stdout_lines == list 
      delay: 30
      retries: 15
