---
- name: Get pv name to verify successful pvc deletion
  shell: source ~/.profile; kubectl get pvc -n {{ namespace }} | grep {{ replace_with.0 }} | awk {'print $3'}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: pv
  changed_when: true

- include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy.yml"
  vars:
    app_yml: "{{ percona_files.0 }}"
    ns: "{{ namespace }}"

- include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy_check.yml"
  vars:
    ns: "{{ namespace }}"
    app: percona

- name: Delete nodeeviction ns
  shell: source ~/.profile; kubectl delete ns {{ namespace }}
  args:
    executable: /bin/bash
  register: ns_out
  until: "'deleted' in ns_out.stdout"
  delay: 10
  retries: 5
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

- name: Confirm pvc pod has been deleted
  shell: source ~/.profile; kubectl get pods -n {{ namespace }} 
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "pv.stdout not in result.stdout"
  delay: 30
  retries: 10
  changed_when: true

- name: Remove copied files
  shell: rm -rf "{{ patch_file }}" "{{ storage_class_file }}"
  args:
    executable: /bin/bash

- name: Remove the nodeeviction-sc storage class
  shell: source ~/.profile; kubectl delete sc nodeeviction-sc
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true

