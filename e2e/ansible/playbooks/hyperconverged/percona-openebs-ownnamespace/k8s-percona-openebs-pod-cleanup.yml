

       - name: Get pvc name to verify successful pvc deletion
         shell: source ~/.profile; kubectl get pvc --all-namespaces | grep {{ replace_with.0 }} | awk {'print $3'}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: pvc
         changed_when: True

       - name: Delete percona mysql pod
         shell: source ~/.profile; kubectl delete -f "{{ percona_file }}" -n percona
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         changed_when: True

       - name: Confirm percona pod has been deleted
         shell: source ~/.profile; kubectl get pods --all-namespaces -l name=percona
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         until: "'percona' not in result.stdout"
         delay: 30
         retries: 10
         changed_when: True

       - name: Confirm percona pvc pod has been deleted
         shell: source ~/.profile; kubectl get pods --all-namespaces | grep {{ pvc.stdout }}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         failed_when: "'pvc' and 'Running' in result.stdout"
         delay: 30
         retries: 10
         changed_when: True

       - name: Delete the openebs operator
         shell: source ~/.profile; kubectl delete -f "{{ openebs_operator }}"
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         ignore_errors: true
         changed_when: True

       - name: Confirm pod has been deleted
         shell: source ~/.profile; kubectl get pods --all-namespaces
         args:
           executable: /bin/bash
         register: result
         until: "'maya-apiserver' or 'openebs-provisioner' not in result.stdout"
         delay: 10
         retries: 6
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         changed_when: True

       - name: Remove test artifacts
         file:
           path: "{{ result_kube_home.stdout }}/{{ item }}"
           state: absent
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         with_items:
             - "{{test_artifacts}}"

       - name: sleep for 50 seconds and continue with play
         wait_for:
           timeout: "50"

       - name: Deploy openebs operator with default namespaces
         shell: source ~/.profile; kubectl apply -f "{{ openebs_operator_link }}"
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         ignore_errors: true
         changed_when: True

       - name: Check whether maya-apiserver pod is running
         shell: source ~/.profile; kubectl get pods --all-namespaces | grep maya-apiserver
         args:
           executable: /bin/bash
         register: result
         until: "'Running' in result.stdout"
         delay: 40
         retries: 5
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         ignore_errors: true
         changed_when: True


