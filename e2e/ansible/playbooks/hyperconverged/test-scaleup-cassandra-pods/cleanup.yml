---
- name: Delete cassandra service pod
  shell: source {{ profile }}; kubectl delete -f {{ result_kube_home.stdout }}/{{ svc_yaml_alias }} -n {{ namespace }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Delete cassandra statefulset pod
  shell: source {{ profile }}; kubectl delete -f {{ result_kube_home.stdout }}/{{ stateful_yaml_alias }} -n {{ namespace }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Delete cassandra loadgen pod
  shell: source {{ profile }}; kubectl delete -f {{ result_kube_home.stdout }}/{{ loadgen_yaml_alias }} -n {{ namespace }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Get pvcs
  shell: source {{ profile }}; kubectl get pvc -n {{ namespace }} -o custom-columns=:metadata.name --no-headers | grep cassandra-data
  args:
    executable: /bin/bash
  register: result
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Delete pvcs
  shell: source {{ profile }}; kubectl delete pvc {{ item }} -n {{ namespace }}
  args:
    executable: /bin/bash
  with_items:
    - "{{ result.stdout_lines }}"
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Confirm cassandra pod has been deleted
  shell: source {{ profile }}; kubectl get pods
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'cassandra' not in result.stdout"
  delay: 120
  retries: 6
  changed_when: True

- name: Get cassandra deploy
  shell: source {{ profile }}; kubectl get deploy -n {{ namespace }} --no-headers | awk {'print $1'}
  args:
    executable: /bin/bash
  register: result
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true

- name: Delete cassandra deploy
  shell: source {{ profile }}; kubectl delete deploy {{ item }} -n {{ namespace }}
  args:
    executable: /bin/bash
  with_items:
    - "{{ result.stdout_lines }}"
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true
  ignore_errors: true

- name: Remove test artifacts
  file:
    path: "{{ result_kube_home.stdout }}/{{ item }}"
    state: absent
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  with_items:
    - "{{ svc_yaml_alias }}"
    - "{{ stateful_yaml_alias }}"
    - "{{ loadgen_yaml_alias }}"
