       
       - name: Delete PVC
         shell: source ~/.profile; kubectl delete -f "{{ openebs_pvc }}" -n "{{ namespace }}" 
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: Confirm if the PVC has been deleted
         shell: source ~/.profile; kubectl get pods --all-namespaces 
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         until: "'pvc' not in result.stdout"
         delay: 30
         retries: 6

       - name: Get pvc name to verify successfull pvc deletion 
         shell: source ~/.profile; kubectl get pvc --all-namespaces | grep {{ volume_claim }} |  awk {'print $3'}
         args:
         executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: pvc

       - name: Confirm pvc pod has been deleted
         shell: source ~/.profile; kubectl get pods --all-namespaces | grep {{ pvc.stdout }}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         failed_when: "'pvc' and 'Running' in result.stdout"
         delay: 30
         retried: 10

      
       - name: Delete Storage_pool path
         shell: source ~/.profile; kubectl delete -f "{{ storage_pool_path_creation }}"
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"


       - name: Delete the openebs operator with default namespace
         shell: source ~/.profile; kubectl delete -f "{{ openebs_operator_link }}" -n "{{operator_namespace}}"
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         when: "'default' in operator_namespace"

       - name: Delete openebs-operator with non-default namespace
         shell: source ~/.profile; kubectl delete -f "{{ openebs_ns_operator }}" -n "{{operator_namespace}}"
         args:
           executable: /bin/bash
         delegate_to: "{{ groups['kubernetes-kubemasters'].0 }}"
         when: "'openebs' in operator_namespace"
         ignore_errors: true

       - name: Confirm pod has been deleted
         shell: source ~/.profile; kubectl get pods --all-namespaces
         args:
           executable: /bin/bash
         register: result
         until: "'maya-apiserver' or 'openebs-provisioner' not in result.stdout"
         delay: 100
         retries: 6
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
     
       - name: Remove test artifacts
         file:
           path: "{{ result_kube_home.stdout }}/{{ openebs_pvc }}"
           state: absent
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}" 

       - name: Remove test artifacts
         file:
           path: "{{ result_kube_home.stdout }}/{{ storage_pool_path_creation }}"
           state: absent
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: sleep for 50 seconds and continue with play
         wait_for:
           timeout: "50"


