---
- name: Get pvc name to verify successful pvc deletion
  shell: source ~/.profile; kubectl get pvc pgdata-pgset-0 -o custom-columns=:spec.volumeName --no-headers
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: pvc
  changed_when: true

- name: Get $HOME of K8s master for kubernetes user
  shell: source ~/.profile; echo $HOME
  args:
    executable: /bin/bash
  register: result_kube_home
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true

- name: Run the shell script to cleanup postgres cluster
  shell: source ~/.profile; ./cleanup.sh
  args:
    chdir: "{{ result_kube_home.stdout }}/crunchy-postgres"
    executable: /bin/bash
  register: postgres_cleanup
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  ignore_errors: true
  changed_when: true

- name: Confirm postgres pods have been deleted
  shell: source ~/.profile; kubectl get pods
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'pgset' not in result.stdout"
  delay: 120
  retries: 6
  changed_when: true

- name: Confirm postgres pods have been deleted
  shell: source ~/.profile; kubectl get pods
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'pgset' not in result.stdout"
  delay: 120
  retries: 6
  changed_when: true

- name: Confirm pvc pod has been deleted
  shell: source ~/.profile; kubectl get pods | grep {{ pvc.stdout }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  failed_when: "'pvc' and 'Running' in result.stdout"
  delay: 30
  retries: 10
  changed_when: true
