---
- name: Get the resourceVersion of the replica deployment
  shell: >
    source ~/.profile; kubectl get deploy -n {{ namespace }}
    {{ replica_deploy }} -o custom-columns=:.metadata.resourceVersion --no-headers
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: rv_bef
  changed_when: true

- name: Get replica pod name
  shell: source ~/.profile; kubectl get pods -n {{ namespace }} -l openebs.io/replica=jiva-replica --no-headers | awk 'FNR == 1 {print}' | awk {'print $1'}
  args:
    executable: /bin/bash
  register: result
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true

- name: Kill replica pod
  shell: source ~/.profile; kubectl delete pod {{ result.stdout }} -n {{ namespace }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true

- name: Get Controller SVC IP
  shell: source ~/.profile; kubectl get svc -n {{ namespace }} | grep ctrl | awk {'print $3'}
  args:
    executable: /bin/bash
  register: SVC
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true

- name: Check if the replica is rebuilt
  include_tasks: "{{utils_path}}/access-mode-check.yml"
  vars:
    ns: "{{ namespace }}"

- name: Get the resourceVersion of the replica deployment
  shell: >
    source ~/.profile; kubectl get deploy -n {{ namespace }}
    {{ replica_deploy }} -o custom-columns=:.metadata.resourceVersion --no-headers
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: rv_aft
  changed_when: true

- name: Compare resourceVersions of replica deployments
  debug:
    msg: "Verified replica pods were restarted by fault injection"
  failed_when: "rv_bef.stdout | int == rv_aft.stdout | int"

