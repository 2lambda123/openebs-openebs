---

- name: Wait some time
  wait_for:
    timeout: 50

- name: Delete Percona deployment
  shell: source ~/.profile; kubectl delete -f "{{ percona_link }}" -n "{{namespace}}"
  args:
    executable: /bin/bash
  register: del_out
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'percona' and 'deleted' in del_out.stdout"
  delay: 90
  retries: 5

- name: Delete the namespace
  shell: source ~/.profile; kubectl delete ns "{{ namespace }}"
  args:
    executable: /bin/bash
  register: ns_delete
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'deleted' in ns_delete.stdout"
  delay: 30
  retries: 5

- name: Delete storage class
  shell: source ~/.profile; kubectl delete -f "{{ create_sc }}"
  args:
    executable: /bin/bash
  register: sc_out
  until: "'deleted' in sc_out.stdout"
  delay: 10
  retries: 5
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Replace the replica count in openebs-storageclasses yaml
  replace:
    path: "{{ create_sc }}"
    regexp: 'openebs.io/jiva-replica-count: "{{ (node_count) |int-1 }}"'
    replace: 'openebs.io/jiva-replica-count: "{{ (node_count |int) }}"'
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

- name: Apply storage class yaml
  shell: source ~/.profile; kubectl apply -f "{{ create_sc }}"
  args:
    executable: /bin/bash
  register: sc_out
  until: "'created' in sc_out.stdout"
  delay: 10
  retries: 5
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Remove copied files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ patch_file }}"
    - "{{ create_sc }}"
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

