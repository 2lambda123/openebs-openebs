---
- name: Delete percona application deployed with snapped pvc
  shell: source ~/.profile; kubectl delete -f "{{ percona }}" -n "{{ namespace }}"
  args:
    executable: /bin/bash
  register: delete_percona
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'pod \"percona-new\" deleted' in delete_percona.stdout"
  delay: 30
  retries: 15
  changed_when: true

- name: Check if the percona pod has been deleted
  shell: source ~/.profile; kubectl get pods -n "{{ namespace }}"
  args:
    executable: /bin/bash
  register: pods
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'percona-new' not in pods.stdout"
  delay: 30
  retries: 15
  changed_when: true

- name: Delete the snapshot claim
  shell: source ~/.profile; kubectl delete -f "{{ snapshot_claim }}" -n "{{ namespace }}"
  args:
    executable: /bin/bash
  register: delete_claim
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'persistentvolumeclaim \"demo-snap-vol-claim\" deleted' in delete_claim.stdout"
  delay: 20
  retries: 5
  changed_when: true

- name: Delete volume snapshot
  shell: source ~/.profile; kubectl delete -f "{{ snapshot }}" -n "{{ namespace }}"
  args:
    executable: /bin/bash
  register: delete_sp
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'deleted' in delete_sp.stdout"
  delay: 20
  retries: 5
  changed_when: true

- name: Delete the percona pod which was created before capturing snaphshot
  shell: source ~/.profile; kubectl delete -f "{{ percona_link }}" -n "{{ namespace }}"
  args:
    executable: /bin/bash
  register: delete_percona_out
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'pod \"percona\" deleted' in delete_percona_out.stdout"
  delay: 30
  retries: 15
  changed_when: true

- name: Check if the pod has been deleted
  shell: source ~/.profile; kubectl get pods -n "{{ namespace }}"
  args:
    executable: /bin/bash
  register: result
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  until: "'percona' not in result.stdout"
  delay: 30
  retries: 15
  changed_when: true

- name: Remove snapshot specific files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ snapshot_files }}"
    - "{{ percona }}"
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

- name: Delete the namespace
  shell: kubectl delete ns "{{ namespace }}"
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
